/* ParserTokenManager.java */
/* Generated By:JavaCC: Do not edit this line. ParserTokenManager.java */
/** MA imports */

import parserElements.*;
import parserExceptions.*;
import compilerElements.*;
import java.util.Map;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.ArrayList;
import java.util.Set;
import java.util.HashSet;
import java.io.FileInputStream;
import java.io.FileNotFoundException;

/** Token Manager. */
@SuppressWarnings("unused")public class ParserTokenManager implements ParserConstants {

  /** Debug output. */
  public static  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public static  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private static final int jjStopStringLiteralDfa_0(int pos, long active0){
   switch (pos)
   {
      case 0:
         if ((active0 & 0x1080000000L) != 0L)
            return 28;
         return -1;
      default :
         return -1;
   }
}
private static final int jjStartNfa_0(int pos, long active0){
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
}
static private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
static private int jjMoveStringLiteralDfa0_0(){
   switch(curChar)
   {
      case 33:
         return jjStartNfaWithStates_0(0, 36, 28);
      case 34:
         return jjStopAtPos(0, 35);
      case 38:
         return jjMoveStringLiteralDfa1_0(0x20000000L);
      case 40:
         return jjStopAtPos(0, 51);
      case 41:
         return jjStopAtPos(0, 52);
      case 42:
         return jjStopAtPos(0, 49);
      case 43:
         return jjStopAtPos(0, 47);
      case 44:
         return jjStopAtPos(0, 39);
      case 45:
         jjmatchedKind = 48;
         return jjMoveStringLiteralDfa1_0(0x200000L);
      case 46:
         return jjStopAtPos(0, 34);
      case 47:
         return jjStopAtPos(0, 50);
      case 58:
         jjmatchedKind = 40;
         return jjMoveStringLiteralDfa1_0(0x400000L);
      case 59:
         jjmatchedKind = 41;
         return jjMoveStringLiteralDfa1_0(0x100L);
      case 60:
         jjmatchedKind = 26;
         return jjMoveStringLiteralDfa1_0(0x2000000L);
      case 61:
         jjmatchedKind = 38;
         return jjMoveStringLiteralDfa1_0(0x800000L);
      case 62:
         jjmatchedKind = 28;
         return jjMoveStringLiteralDfa1_0(0x8000000L);
      case 123:
         return jjStopAtPos(0, 32);
      case 124:
         return jjMoveStringLiteralDfa1_0(0x40000000L);
      case 125:
         return jjStopAtPos(0, 33);
      case 126:
         return jjStartNfaWithStates_0(0, 31, 28);
      default :
         return jjMoveNfa_0(6, 0);
   }
}
static private int jjMoveStringLiteralDfa1_0(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 38:
         if ((active0 & 0x20000000L) != 0L)
            return jjStopAtPos(1, 29);
         break;
      case 59:
         if ((active0 & 0x100L) != 0L)
            return jjStopAtPos(1, 8);
         break;
      case 61:
         if ((active0 & 0x400000L) != 0L)
            return jjStopAtPos(1, 22);
         else if ((active0 & 0x800000L) != 0L)
            return jjStopAtPos(1, 23);
         else if ((active0 & 0x2000000L) != 0L)
            return jjStopAtPos(1, 25);
         else if ((active0 & 0x8000000L) != 0L)
            return jjStopAtPos(1, 27);
         break;
      case 62:
         if ((active0 & 0x200000L) != 0L)
            return jjStopAtPos(1, 21);
         break;
      case 124:
         if ((active0 & 0x40000000L) != 0L)
            return jjStopAtPos(1, 30);
         break;
      default :
         break;
   }
   return jjStartNfa_0(0, active0);
}
static private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 196;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 6:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 46)
                        kind = 46;
                     { jjCheckNAdd(36); }
                  }
                  else if (curChar == 33)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 28:
                  if (curChar == 61)
                     kind = 24;
                  break;
               case 30:
                  if (curChar == 33)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 35:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 45)
                     kind = 45;
                  jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 36:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 46)
                     kind = 46;
                  { jjCheckNAdd(36); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 6:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 45)
                        kind = 45;
                     { jjCheckNAdd(35); }
                  }
                  else if (curChar == 126)
                     jjstateSet[jjnewStateCnt++] = 28;
                  if (curChar == 83)
                     { jjAddStates(0, 3); }
                  else if (curChar == 73)
                     { jjCheckNAddStates(4, 9); }
                  else if (curChar == 69)
                     { jjAddStates(10, 13); }
                  else if (curChar == 70)
                     { jjAddStates(14, 17); }
                  else if (curChar == 84)
                     { jjAddStates(18, 21); }
                  else if (curChar == 101)
                     { jjAddStates(22, 23); }
                  else if (curChar == 116)
                     { jjAddStates(24, 25); }
                  else if (curChar == 102)
                     { jjAddStates(26, 27); }
                  else if (curChar == 105)
                     { jjCheckNAddStates(28, 30); }
                  else if (curChar == 115)
                     { jjAddStates(31, 32); }
                  else if (curChar == 80)
                     { jjAddStates(33, 35); }
                  else if (curChar == 81)
                     { jjAddStates(36, 37); }
                  else if (curChar == 67)
                     { jjAddStates(38, 41); }
                  else if (curChar == 99)
                     { jjAddStates(42, 43); }
                  else if (curChar == 66)
                     { jjAddStates(44, 45); }
                  else if (curChar == 82)
                     { jjAddStates(46, 47); }
                  else if (curChar == 78)
                     { jjAddStates(48, 49); }
                  else if (curChar == 87)
                     { jjAddStates(50, 51); }
                  else if (curChar == 68)
                     { jjCheckNAddTwoStates(42, 26); }
                  else if (curChar == 76)
                     { jjAddStates(52, 53); }
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 32;
                  else if (curChar == 100)
                     { jjCheckNAdd(26); }
                  else if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 24;
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 19;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 16;
                  else if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 13;
                  else if (curChar == 113)
                     jjstateSet[jjnewStateCnt++] = 9;
                  else if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 0:
                  if (curChar == 110 && kind > 5)
                     kind = 5;
                  break;
               case 1:
               case 96:
                  if (curChar == 108)
                     { jjCheckNAdd(0); }
                  break;
               case 2:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 3:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 4:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 5:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 7:
                  if (curChar == 116 && kind > 6)
                     kind = 6;
                  break;
               case 8:
               case 87:
                  if (curChar == 105)
                     { jjCheckNAdd(7); }
                  break;
               case 9:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if (curChar == 113)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 11:
                  if (curChar == 108 && kind > 12)
                     kind = 12;
                  break;
               case 12:
               case 63:
                  if (curChar == 111)
                     { jjCheckNAdd(11); }
                  break;
               case 13:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 14:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 15:
                  if (curChar == 102 && kind > 13)
                     kind = 13;
                  break;
               case 16:
               case 58:
                  if (curChar == 101)
                     { jjCheckNAdd(15); }
                  break;
               case 17:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 18:
                  if (curChar == 119 && kind > 15)
                     kind = 15;
                  break;
               case 19:
               case 54:
                  if (curChar == 101)
                     { jjCheckNAdd(18); }
                  break;
               case 20:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 21:
                  if (curChar == 101 && kind > 19)
                     kind = 19;
                  break;
               case 22:
               case 48:
                  if (curChar == 108)
                     { jjCheckNAdd(21); }
                  break;
               case 23:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 24:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 25:
                  if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if (curChar == 111 && kind > 20)
                     kind = 20;
                  break;
               case 27:
                  if (curChar == 100)
                     { jjCheckNAdd(26); }
                  break;
               case 29:
                  if (curChar == 126)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 31:
                  if (curChar == 116 && kind > 37)
                     kind = 37;
                  break;
               case 32:
               case 40:
                  if (curChar == 101)
                     { jjCheckNAdd(31); }
                  break;
               case 33:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 34:
               case 35:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 45)
                     kind = 45;
                  { jjCheckNAdd(35); }
                  break;
               case 37:
                  if (curChar == 76)
                     { jjAddStates(52, 53); }
                  break;
               case 38:
                  if (curChar == 84 && kind > 37)
                     kind = 37;
                  break;
               case 39:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 41:
                  if (curChar == 68)
                     { jjCheckNAddTwoStates(42, 26); }
                  break;
               case 42:
                  if (curChar == 79 && kind > 20)
                     kind = 20;
                  break;
               case 43:
                  if (curChar == 87)
                     { jjAddStates(50, 51); }
                  break;
               case 44:
                  if (curChar == 69 && kind > 19)
                     kind = 19;
                  break;
               case 45:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 46:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 47:
                  if (curChar == 72)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 49:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 50:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 51:
                  if (curChar == 78)
                     { jjAddStates(48, 49); }
                  break;
               case 52:
                  if (curChar == 87 && kind > 15)
                     kind = 15;
                  break;
               case 53:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 55:
                  if (curChar == 82)
                     { jjAddStates(46, 47); }
                  break;
               case 56:
                  if (curChar == 70 && kind > 13)
                     kind = 13;
                  break;
               case 57:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 59:
                  if (curChar == 66)
                     { jjAddStates(44, 45); }
                  break;
               case 60:
                  if (curChar == 76 && kind > 12)
                     kind = 12;
                  break;
               case 61:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 62:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 64:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 65:
                  if (curChar == 99)
                     { jjAddStates(42, 43); }
                  break;
               case 66:
                  if (curChar == 115 && kind > 7)
                     kind = 7;
                  break;
               case 67:
               case 75:
                  if (curChar == 108)
                     { jjCheckNAdd(66); }
                  break;
               case 68:
                  if (curChar == 114 && kind > 7)
                     kind = 7;
                  break;
               case 69:
               case 80:
                  if (curChar == 97)
                     { jjCheckNAdd(68); }
                  break;
               case 70:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 71:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 72:
                  if (curChar == 67)
                     { jjAddStates(38, 41); }
                  break;
               case 73:
                  if (curChar == 83 && kind > 7)
                     kind = 7;
                  break;
               case 74:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 76:
                  if (curChar == 82 && kind > 7)
                     kind = 7;
                  break;
               case 77:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 78:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               case 79:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 78;
                  break;
               case 81:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 82:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 81;
                  break;
               case 83:
                  if (curChar == 81)
                     { jjAddStates(36, 37); }
                  break;
               case 84:
                  if (curChar == 84 && kind > 6)
                     kind = 6;
                  break;
               case 85:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 84;
                  break;
               case 86:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 85;
                  break;
               case 88:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 87;
                  break;
               case 89:
                  if (curChar == 80)
                     { jjAddStates(33, 35); }
                  break;
               case 90:
                  if (curChar == 78 && kind > 5)
                     kind = 5;
                  break;
               case 91:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 92:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 91;
                  break;
               case 93:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 94:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 95:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 97:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 96;
                  break;
               case 98:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 97;
                  break;
               case 99:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 100:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 101:
                  if (curChar == 76)
                     { jjCheckNAdd(0); }
                  break;
               case 102:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 103:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 104:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 105:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 106:
                  if (curChar == 115)
                     { jjAddStates(31, 32); }
                  break;
               case 107:
                  if (curChar == 116 && kind > 9)
                     kind = 9;
                  break;
               case 108:
               case 183:
                  if (curChar == 99)
                     { jjCheckNAdd(107); }
                  break;
               case 109:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 110:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 111:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 112:
                  if (curChar == 103 && kind > 10)
                     kind = 10;
                  break;
               case 113:
               case 192:
                  if (curChar == 110)
                     { jjCheckNAdd(112); }
                  break;
               case 114:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 115:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 116:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 117:
                  if (curChar == 105)
                     { jjCheckNAddStates(28, 30); }
                  break;
               case 118:
                  if (curChar == 116 && kind > 11)
                     kind = 11;
                  break;
               case 119:
               case 174:
                  if (curChar == 110)
                     { jjCheckNAdd(118); }
                  break;
               case 120:
                  if (curChar == 102 && kind > 16)
                     kind = 16;
                  break;
               case 121:
                  if (curChar == 110 && kind > 42)
                     kind = 42;
                  break;
               case 122:
                  if (curChar == 102)
                     { jjAddStates(26, 27); }
                  break;
               case 123:
                  if (curChar == 110 && kind > 14)
                     kind = 14;
                  break;
               case 124:
               case 155:
                  if (curChar == 117)
                     { jjCheckNAdd(123); }
                  break;
               case 125:
                  if (curChar == 101 && kind > 44)
                     kind = 44;
                  break;
               case 126:
               case 159:
                  if (curChar == 115)
                     { jjCheckNAdd(125); }
                  break;
               case 127:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 128:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 127;
                  break;
               case 129:
                  if (curChar == 116)
                     { jjAddStates(24, 25); }
                  break;
               case 130:
                  if (curChar == 110 && kind > 17)
                     kind = 17;
                  break;
               case 131:
               case 145:
                  if (curChar == 101)
                     { jjCheckNAdd(130); }
                  break;
               case 132:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 133:
               case 150:
                  if (curChar == 117)
                     { jjCheckNAdd(125); }
                  break;
               case 134:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 135:
                  if (curChar == 101)
                     { jjAddStates(22, 23); }
                  break;
               case 136:
                  if (curChar == 101 && kind > 18)
                     kind = 18;
                  break;
               case 137:
               case 166:
                  if (curChar == 115)
                     { jjCheckNAdd(136); }
                  break;
               case 138:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 139:
                  if (curChar == 100 && kind > 43)
                     kind = 43;
                  break;
               case 140:
               case 170:
                  if (curChar == 110)
                     { jjCheckNAdd(139); }
                  break;
               case 141:
                  if (curChar == 84)
                     { jjAddStates(18, 21); }
                  break;
               case 142:
                  if (curChar == 78 && kind > 17)
                     kind = 17;
                  break;
               case 143:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 144:
                  if (curChar == 72)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 146:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 147:
                  if (curChar == 69 && kind > 44)
                     kind = 44;
                  break;
               case 148:
                  if (curChar == 85)
                     { jjCheckNAdd(147); }
                  break;
               case 149:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 148;
                  break;
               case 151:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 152:
                  if (curChar == 70)
                     { jjAddStates(14, 17); }
                  break;
               case 153:
                  if (curChar == 78 && kind > 14)
                     kind = 14;
                  break;
               case 154:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 153;
                  break;
               case 156:
                  if (curChar == 83)
                     { jjCheckNAdd(147); }
                  break;
               case 157:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 156;
                  break;
               case 158:
                  if (curChar == 65)
                     jjstateSet[jjnewStateCnt++] = 157;
                  break;
               case 160:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 161:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 162:
                  if (curChar == 69)
                     { jjAddStates(10, 13); }
                  break;
               case 163:
                  if (curChar == 69 && kind > 18)
                     kind = 18;
                  break;
               case 164:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 165:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 167:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 168:
                  if (curChar == 68 && kind > 43)
                     kind = 43;
                  break;
               case 169:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 171:
                  if (curChar == 73)
                     { jjCheckNAddStates(4, 9); }
                  break;
               case 172:
                  if (curChar == 84 && kind > 11)
                     kind = 11;
                  break;
               case 173:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 175:
                  if (curChar == 70 && kind > 16)
                     kind = 16;
                  break;
               case 176:
                  if (curChar == 78 && kind > 42)
                     kind = 42;
                  break;
               case 177:
                  if (curChar == 83)
                     { jjAddStates(0, 3); }
                  break;
               case 178:
                  if (curChar == 84 && kind > 9)
                     kind = 9;
                  break;
               case 179:
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 180:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 179;
                  break;
               case 181:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 180;
                  break;
               case 182:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 181;
                  break;
               case 184:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 183;
                  break;
               case 185:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 186:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 185;
                  break;
               case 187:
                  if (curChar == 71 && kind > 10)
                     kind = 10;
                  break;
               case 188:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 189:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 188;
                  break;
               case 190:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 189;
                  break;
               case 191:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 193:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 192;
                  break;
               case 194:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 193;
                  break;
               case 195:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 194;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 196 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   182, 186, 191, 195, 173, 174, 175, 120, 176, 121, 165, 167, 169, 170, 154, 155, 
   158, 161, 144, 146, 149, 151, 138, 140, 132, 134, 124, 128, 119, 120, 121, 111, 
   116, 95, 100, 105, 86, 88, 74, 75, 79, 82, 67, 71, 62, 64, 57, 58, 
   53, 54, 47, 50, 39, 40, 
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, "\73\73", null, null, null, null, 
null, null, null, null, null, null, null, null, "\55\76", "\72\75", "\75\75", null, 
"\74\75", "\74", "\76\75", "\76", "\46\46", "\174\174", "\176", "\173", "\175", "\56", 
"\42", "\41", null, "\75", "\54", "\72", "\73", null, null, null, null, null, "\53", 
"\55", "\52", "\57", "\50", "\51", };
static protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

static int curLexState = 0;
static int defaultLexState = 0;
static int jjnewStateCnt;
static int jjround;
static int jjmatchedPos;
static int jjmatchedKind;

/** Get the next Token. */
public static Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      jjmatchedPos = -1;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   try { input_stream.backup(0);
      while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
         curChar = input_stream.BeginToken();
   }
   catch (java.io.IOException e1) { continue EOFLoop; }
   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         return matchedToken;
      }
      else
      {
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

static private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
static private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
static private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

static private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

    /** Constructor. */
    public ParserTokenManager(SimpleCharStream stream){

      if (input_stream != null)
        throw new TokenMgrError("ERROR: Second call to constructor of static lexer. You must use ReInit() to initialize the static variables.", TokenMgrError.STATIC_LEXER_ERROR);

    input_stream = stream;
  }

  /** Constructor. */
  public ParserTokenManager (SimpleCharStream stream, int lexState){
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Reinitialise parser. */
  static public void ReInit(SimpleCharStream stream)
  {
    jjmatchedPos = jjnewStateCnt = 0;
    curLexState = defaultLexState;
    input_stream = stream;
    ReInitRounds();
  }

  static private void ReInitRounds()
  {
    int i;
    jjround = 0x80000001;
    for (i = 196; i-- > 0;)
      jjrounds[i] = 0x80000000;
  }

  /** Reinitialise parser. */
  static public void ReInit(SimpleCharStream stream, int lexState)
  {
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Switch to specified lex state. */
  static public void SwitchTo(int lexState)
  {
    if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
    else
      curLexState = lexState;
  }

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};
static final long[] jjtoToken = {
   0x1fffffffffffe1L, 
};
static final long[] jjtoSkip = {
   0x1eL, 
};
    static protected SimpleCharStream  input_stream;

    static private final int[] jjrounds = new int[196];
    static private final int[] jjstateSet = new int[2 * 196];

    
    static protected char curChar;
}
